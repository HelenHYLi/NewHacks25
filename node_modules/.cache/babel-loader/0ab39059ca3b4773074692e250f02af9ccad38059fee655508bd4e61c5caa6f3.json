{"ast":null,"code":"var _jsxFileName = \"/Users/helenli/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport styles from '@chatscope/chat-ui-kit-styles/dist/default/styles.min.css';\nimport { MainContainer, ChatContainer, MessageList, Message, MessageInput } from \"@chatscope/chat-ui-kit-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyButton() {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    children: \"I'm a button\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = MyButton;\nfunction App() {\n  _s();\n  //variables to track what the user types \n  const [origin, setOrigin] = useState(\"\");\n  const [destination, setDestination] = useState(\"\");\n\n  //storing Gemini's results \n  const [analysis, setAnalysis] = useState(null);\n\n  //input  \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        height: \"500px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MainContainer, {\n        children: /*#__PURE__*/_jsxDEV(ChatContainer, {\n          children: [/*#__PURE__*/_jsxDEV(MessageList, {\n            children: /*#__PURE__*/_jsxDEV(Message, {\n              model: {\n                message: \"Hello my friend\",\n                sentTime: \"just now\",\n                sender: \"Joe\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n            placeholder: \"Type message here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fzIyh7y+4gVeMJb52ebW7E6+ezU=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"MyButton\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useRef","logo","styles","MainContainer","ChatContainer","MessageList","Message","MessageInput","jsxDEV","_jsxDEV","MyButton","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","origin","setOrigin","destination","setDestination","analysis","setAnalysis","className","style","position","height","model","message","sentTime","sender","placeholder","_c2","$RefreshReg$"],"sources":["/Users/helenli/my-app/src/App.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport styles from '@chatscope/chat-ui-kit-styles/dist/default/styles.min.css';\n\nimport {\n  MainContainer,\n  ChatContainer,\n  MessageList,\n  Message,\n  MessageInput,\n} from \"@chatscope/chat-ui-kit-react\";\n\nfunction MyButton() {\n  return (\n    <button>I'm a button</button>\n  )\n}\n\nfunction App() {\n  //variables to track what the user types \n  const [origin, setOrigin] = useState(\"\");\n  const [destination, setDestination] = useState(\"\");\n\n  //storing Gemini's results \n  const [analysis, setAnalysis] = useState(null);\n\n  //input  \n\n\n  return (\n    <div className=\"App\">\n      <div style={{ position:\"relative\", height: \"500px\" }}>\n      <MainContainer>\n        <ChatContainer>       \n          <MessageList>\n            <Message model={{\n                    message: \"Hello my friend\",\n                    sentTime: \"just now\",\n                    sender: \"Joe\"\n                    }} />\n            </MessageList>\n          <MessageInput placeholder=\"Type message here\" />        \n        </ChatContainer>\n      </MainContainer>\n    </div>\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,2DAA2D;AAE9E,SACEC,aAAa,EACbC,aAAa,EACbC,WAAW,EACXC,OAAO,EACPC,YAAY,QACP,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,QAAQA,CAAA,EAAG;EAClB,oBACED,OAAA;IAAAE,QAAA,EAAQ;EAAY;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEjC;AAACC,EAAA,GAJQN,QAAQ;AAMjB,SAASO,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACsB,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACA,MAAM,CAACwB,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;;EAE9C;;EAGA,oBACEU,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAd,QAAA,eAClBF,OAAA;MAAKiB,KAAK,EAAE;QAAEC,QAAQ,EAAC,UAAU;QAAEC,MAAM,EAAE;MAAQ,CAAE;MAAAjB,QAAA,eACrDF,OAAA,CAACN,aAAa;QAAAQ,QAAA,eACZF,OAAA,CAACL,aAAa;UAAAO,QAAA,gBACZF,OAAA,CAACJ,WAAW;YAAAM,QAAA,eACVF,OAAA,CAACH,OAAO;cAACuB,KAAK,EAAE;gBACRC,OAAO,EAAE,iBAAiB;gBAC1BC,QAAQ,EAAE,UAAU;gBACpBC,MAAM,EAAE;cACR;YAAE;cAAApB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eAChBN,OAAA,CAACF,YAAY;YAAC0B,WAAW,EAAC;UAAmB;YAAArB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAEV;AAACG,EAAA,CA9BQD,GAAG;AAAAiB,GAAA,GAAHjB,GAAG;AAgCZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAkB,GAAA;AAAAC,YAAA,CAAAnB,EAAA;AAAAmB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}